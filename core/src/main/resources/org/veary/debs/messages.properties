global.parameter.error.null = Parameter '%s' cannot be null

# org.veary.debs.Account
Account.Types.getType.exception = Unknown Account Type: %s
Account.Groups.getGroup.exception = Unknown Account Group: %s

# org.veary.debs.core.utils
Validator.validateDataMap.entrycount = Parameter 'dataMap' must contain exactly %s entries
Validator.validateDataMap.missingkey = Parameter 'dataMap' does not contain the required keys
Validator.validateDataMap.nullvalue = Parameter 'dataMap' cannot contain null values

# org.veary.debs.core.facade.AccountFacade
RealAccountFacade.create.validateInput.noparentid = The Account object does not have a parent set!
RealAccountFacade.update.error.builtin = The '%s' is a build-in account and cannot be modified!
RealAccountFacade.chart.assert.norootnode = Root node problem. There must be one root node named: %s
RealAccountFacade.chart.assert.unknownparent = Found an account '%s' with no known parent.

# org.veary.debs.core.dao.RealRegistry
RealRegistry.getSql.missingkey = Unknown key: %s

# org.veary.debs.Entry
Entry.Types.getType.exception = Unknown Entry Type: %s
EntryEntry.validateInput.amount.fromexception = A 'FROM' entry must have a negative amount. Actual: %s
EntryEntry.validateInput.amount.toexception = A 'TO' entry must have a positive amount. Actual: %s

# org.veary.debs.core.RealTransactionDao
RealTransactionDao.createTransaction.fromEntry.null = The method getFromEntry() returned null
RealTransactionDao.createTransaction.toEntry.null = The method getToEntry() returned null

# org.veary.debs.core.model.TransactionGetByIdEntity
TransactionGetByIdEntity.setFromAmount.wrongsign = The amount for the 'FROM' account must be a minus. Value: %s
TransactionGetByIdEntity.setToAmount.wrongsign = The amount for the 'TO' account must be plus. Value: %s

RealSystemFacade.updateTransaction.fromexception = The original 'FROM' entry must not be the same instance as the updated 'FROM' entry. Use the EntryEntity copy constructor.
RealSystemFacade.updateTransaction.toexception = The original 'TO' entry must not be the same instance as the updated 'TO' entry. Use the EntryEntity copy constructor.