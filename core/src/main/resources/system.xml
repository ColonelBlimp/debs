<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE system [
<!ELEMENT system (method+)>
<!ELEMENT method (#PCDATA)>
<!ATTLIST method name CDATA "">
]>
<system>
	<method name="createAccount"><![CDATA[
INSERT INTO DEBS.ACCOUNT(NAME,DESCRIPTION,PARENT_ID,ACCOUNT_TYPE) VALUES(?,?,?,?)
	]]></method>
	<method name="updateAccount"><![CDATA[
UPDATE DEBS.ACCOUNT SET NAME=?,DESCRIPTION=?,PARENT_ID=?,ACCOUNT_TYPE=?,DELETED=? WHERE ID=?
	]]></method>
	<method name="updateAccountBalance"><![CDATA[
UPDATE DEBS.ACCOUNT SET BALANCE=BALANCE+? WHERE ID=?
	]]></method>
	<method name="getAccountById"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE ID=?
	]]></method>
	<method name="getAccountByName"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE NAME=?
	]]></method>
	<method name="getAllAccountsIncludeDeleted"><![CDATA[
SELECT * FROM DEBS.ACCOUNT
	]]></method>
	<method name="getAllAccounts"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE DELETED=FALSE
	]]></method>
	<method name="getGroupAccountsIncludeDeleted"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE ACCOUNT_TYPE=8
	]]></method>
	<method name="getGroupAccounts"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE ACCOUNT_TYPE=8 AND DELETED=FALSE
	]]></method>
	<method name="getActualAccountsIncludeDeleted"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE ACCOUNT_TYPE!=8
	]]></method>
	<method name="getActualAccounts"><![CDATA[
SELECT * FROM DEBS.ACCOUNT WHERE ACCOUNT_TYPE!=8 AND DELETED=FALSE
	]]></method>
	<method name="createTransaction"><![CDATA[
INSERT INTO DEBS.TRANSACTION(TDATE,REFERENCE,NARRATIVE,EID_FROM,EID_TO) VALUES(?,?,?,?,?)
	]]></method>
	<method name="createTransactionEntry"><![CDATA[
INSERT INTO DEBS.ENTRY(AMOUNT,ETYPE,ACCOUNT_ID,CLEARED,CLEARED_TS) VALUES(?,?,?,?,?)
	]]></method>
	<method name="updateTransaction"><![CDATA[
UPDATE DEBS.TRANSACTION SET TDATE=?,REFERENCE=?,NARRATIVE=?,EID_FROM=?,EID_TO=?,DELETED=? WHERE ID=?
	]]></method>
	<method name="updateTransactionEntry"><![CDATA[
UPDATE DEBS.ENTRY SET AMOUNT=?,ETYPE=?,ACCOUNT_ID=?,CLEARED=?,CLEARED_TS=?,DELETED=? WHERE ID=?
	]]></method>
	<method name="deleteTransaction"><![CDATA[
UPDATE DEBS.TRANSACTION SET DELETED=TRUE WHERE ID=?
	]]></method>
	<method name="deleteTransactionEntry"><![CDATA[
UPDATE DEBS.ENTRY SET DELETED=TRUE WHERE ID=?
	]]></method>
	<method name="getTransactionById"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE TX.ID=?
	]]></method>
	<!-- All Tx -->
	<method name="getAllTransactionsBoth"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
	]]></method>
	<method name="getAllTransactionsDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE TX.DELETED=TRUE
	]]></method>
	<method name="getAllTransactionsExcludeDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE TX.DELETED=FALSE
	]]></method>
	<!-- All Tx Over Period -->
	<method name="getAllTransactionsOverPeriodBoth"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?
	]]></method>
	<method name="getAllTransactionsOverPeriodDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE TX.DELETED=TRUE AND YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?
	]]></method>
	<method name="getAllTransactionsOverPeriodExcludeDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE TX.DELETED=FALSE AND YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?
	]]></method>
	<!-- Account Tx -->
	<method name="getTransactionsForAccountBoth"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE FE.ACCOUNT_ID=? OR TE.ACCOUNT_ID=?
	]]></method>
	<method name="getTransactionsForAccountDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE FE.ACCOUNT_ID=? AND TX.DELETED=TRUE OR TE.ACCOUNT_ID=? AND TX.DELETED=TRUE
	]]></method>
	<method name="getTransactionsForAccountExcludeDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE FE.ACCOUNT_ID=? AND TX.DELETED=FALSE OR TE.ACCOUNT_ID=? AND TX.DELETED=FALSE
	]]></method>
    <!-- Account Tx Over Period -->
	<method name="getTransactionsForAccountOverPeriodBoth"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE (FE.ACCOUNT_ID=? OR TE.ACCOUNT_ID=?) AND (YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?)
	]]></method>
	<method name="getTransactionsForAccountOverPeriodDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE ((FE.ACCOUNT_ID=? AND TX.DELETED=TRUE) OR (TE.ACCOUNT_ID=? AND TX.DELETED=TRUE)) AND (YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?)
	]]></method>
	<method name="getTransactionsForAccountOverPeriodExcludeDeleted"><![CDATA[
SELECT TX.ID,TX.CREATED,TX.DELETED,TX.REFERENCE,TX.NARRATIVE,TX.TDATE,
FE.ID AS "FROM_ID",FE.DELETED AS "FROM_DELETED",FE.AMOUNT AS "FROM_AMOUNT",FE.ETYPE AS "FROM_ETYPE",FE.ACCOUNT_ID AS "FROM_ACCOUNT_ID",FE.CLEARED AS "FROM_CLEARED",FE.CLEARED_TS as "FROM_CLEARED_TS",FE.CREATED AS "FROM_CREATED",
TE.ID AS "TO_ID",TE.DELETED AS "TO_DELETED",TE.AMOUNT AS "TO_AMOUNT",TE.ETYPE AS "TO_ETYPE",TE.ACCOUNT_ID AS "TO_ACCOUNT_ID",TE.CLEARED AS "TO_CLEARED",TE.CLEARED_TS AS "TO_CLEARED_TS",TE.CREATED AS "TO_CREATED"
 FROM DEBS.TRANSACTION AS TX
 INNER JOIN DEBS.ENTRY AS FE ON FE.ID=TX.EID_FROM AND FE.ETYPE=1
 INNER JOIN DEBS.ENTRY AS TE ON TE.ID=TX.EID_TO AND TE.ETYPE=2
 WHERE ((FE.ACCOUNT_ID=? AND TX.DELETED=FALSE) OR (TE.ACCOUNT_ID=? AND TX.DELETED=FALSE)) AND (YEAR(TX.TDATE)=? AND MONTH(TX.TDATE)=?)
	]]></method>
</system>
